<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.springframework.scheduling.support.CronTriggerTests" tests="112" skipped="0" failures="0" errors="0" timestamp="2020-11-25T14:38:32" hostname="lichangbaodeMacBook-Pro.local" time="0.022">
  <properties/>
  <testcase name="testSundayIsZero[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSecondIncrementer[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthSequence[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.003"/>
  <testcase name="testDayNames[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testDailyTriggerOnDaylightSavingBoundary[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthlyTriggerInLongMonth[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementDayOfWeekAndRollover[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testWeekDaySequence[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testDaylightSavingMissingHour[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementDayOfMonthAndRollover[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testLeapYearSpecificDate[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.002"/>
  <testcase name="testDayRangeInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDayOfMonthInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementSecondByOne[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementDayOfMonth[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSecondIncrementerWithRange[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSundaySynonym[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMinuteInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthRangeInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementSecondAndRollover[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementDayOfWeekByOne[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDailyTriggerInShortMonth[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testNonExistentSpecificDate[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementSecondWithPreviousExecutionTooEarly[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testWhitespace[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSecondRange[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementMinute[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSpecificHourSecond[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSpecificDate[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMatchSpecificSecond[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testHourInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementMinuteByOne[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementMonth[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testHourRangeInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMinuteRangeInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementDayOfMonthByOne[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementMinuteAndRollover[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMatchAll[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSpecificMinuteHour[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMatchLastSecond[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSecondInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSpecificMinuteSecond[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSpecificDayOfMonthSecond[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementHour[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthlyTriggerInShortMonth[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthInvalidTooSmall[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementMonthAndRollover[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDayInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthNamesMixedCase[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testDayOfWeekIndifferent[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthNames[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDailyTriggerInLongMonth[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSecondRangeInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testHourIncrementer[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementHourAndRollover[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;PST&quot;,offset=-28800000,dstSavings=3600000,useDaylight=true,transitions=185,lastRule=java.util.SimpleTimeZone[id=PST,offset=-28800000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=3,startMonth=2,startDay=8,startDayOfWeek=1,startTime=7200000,startTimeMode=0,endMode=3,endMonth=10,endDay=1,endDayOfWeek=1,endTime=7200000,endTimeMode=0]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testSundayIsZero[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSecondIncrementer[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthSequence[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDayNames[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDailyTriggerOnDaylightSavingBoundary[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMonthlyTriggerInLongMonth[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementDayOfWeekAndRollover[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testWeekDaySequence[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDaylightSavingMissingHour[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementDayOfMonthAndRollover[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testLeapYearSpecificDate[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testDayRangeInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDayOfMonthInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementSecondByOne[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementDayOfMonth[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSecondIncrementerWithRange[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSundaySynonym[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMinuteInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthRangeInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testIncrementSecondAndRollover[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementDayOfWeekByOne[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDailyTriggerInShortMonth[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testNonExistentSpecificDate[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementSecondWithPreviousExecutionTooEarly[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testWhitespace[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSecondRange[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementMinute[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSpecificHourSecond[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSpecificDate[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.001"/>
  <testcase name="testMatchSpecificSecond[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testHourInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementMinuteByOne[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementMonth[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testHourRangeInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMinuteRangeInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementDayOfMonthByOne[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementMinuteAndRollover[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMatchAll[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSpecificMinuteHour[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMatchLastSecond[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSecondInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSpecificMinuteSecond[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSpecificDayOfMonthSecond[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementHour[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthlyTriggerInShortMonth[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthInvalidTooSmall[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementMonthAndRollover[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDayInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthNamesMixedCase[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDayOfWeekIndifferent[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testMonthNames[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testDailyTriggerInLongMonth[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testSecondRangeInvalid[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testHourIncrementer[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <testcase name="testIncrementHourAndRollover[date [25.11.20 22:38], time zone [sun.util.calendar.ZoneInfo[id=&quot;CET&quot;,offset=3600000,dstSavings=3600000,useDaylight=true,transitions=137,lastRule=java.util.SimpleTimeZone[id=CET,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=7200000,startTimeMode=1,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=7200000,endTimeMode=1]]]]" classname="org.springframework.scheduling.support.CronTriggerTests" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
